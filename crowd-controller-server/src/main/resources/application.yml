server:
  port: 8080

spring:
  profiles:
    active: prod
  datasource:
    url: jdbc:mysql://helios.csesalford.com:3306/stb098_crowdcontroller?useSSL=false
    username: stb098
    password: '*stb098*'
  jpa:
    hibernate:
      ddl-auto: create
#      https://www.quickprogrammingtips.com/spring-boot/how-to-send-email-from-spring-boot-applications.html
  mail:
    host: smtp.gmail.com
    port: 587
    username: crowdcontrollerapp
    password: D*eU%Qve3xK72bW0r3c30PW0KB$xI87r
    protocol: smtp
    properties:
      mail:
        smtp:
          starttls:
            enabled: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

security:
  signing-key: MaYzkSjmkzPC57L
  security-realm: Ricks Realm
  oauth2:
    resource:
      filter-order: 3
  jwt:
    client-id: crowdcontrollerclientid
    client-secret: IKUJENFiewf8124ensdcfwfSDF
    grant-types: password
    scope-read: read
    scope-write: write
    resource-ids: ricksResourceId
    validity: 0

management:
  context-path: /actuator
  security:
    enabled: false

endpoints:
  shutdown:
    enabled: true
    sensitive: false

logging:
  file: crowdcontroller.log
  level:
    root: INFO
    me.cooper.rick: DEBUG
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

my:
  application:
    url: http://localhost:${server.port}
